<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Cloud.Firestore.Admin.V1</name>
    </assembly>
    <members>
        <member name="T:Google.Cloud.Firestore.Admin.V1.DatabaseReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/database.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/database.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Database">
            <summary>
            A Cloud Firestore Database.
            Currently only one database is allowed per cloud project; this database
            must have a `database_id` of '(default)'.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.Name">
            <summary>
            The resource name of the Database.
            Format: `projects/{project}/databases/{database}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.LocationIdFieldNumber">
            <summary>Field number for the "location_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.LocationId">
            <summary>
            The location of the database. Available databases are listed at
            https://cloud.google.com/firestore/docs/locations.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.Type">
            <summary>
            The type of the database.
            See https://cloud.google.com/datastore/docs/firestore-or-datastore for
            information about how to choose.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.ConcurrencyModeFieldNumber">
            <summary>Field number for the "concurrency_mode" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.ConcurrencyMode">
            <summary>
            The concurrency control mode to use for this database.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.AppEngineIntegrationModeFieldNumber">
            <summary>Field number for the "app_engine_integration_mode" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.AppEngineIntegrationMode">
            <summary>
            The App Engine integration mode to use for this database.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.KeyPrefixFieldNumber">
            <summary>Field number for the "key_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.KeyPrefix">
             <summary>
             Output only. The key_prefix for this database. This key_prefix is used, in combination
             with the project id ("&lt;key prefix>~&lt;project id>") to construct the
             application id that is returned from the Cloud Datastore APIs in Google App
             Engine first generation runtimes.
            
             This value may be empty in which case the appid to use for URL-encoded keys
             is the project_id (eg: foo instead of v~foo).
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.EtagFieldNumber">
            <summary>Field number for the "etag" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.Etag">
            <summary>
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Database.Types">
            <summary>Container for nested types declared in the Database message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Database.Types.DatabaseType">
             <summary>
             The type of the database.
             See https://cloud.google.com/datastore/docs/firestore-or-datastore for
             information about how to choose.
            
             Mode changes are only allowed if the database is empty.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.DatabaseType.Unspecified">
            <summary>
            The default value. This value is used if the database type is omitted.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.DatabaseType.FirestoreNative">
            <summary>
            Firestore Native Mode
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.DatabaseType.DatastoreMode">
            <summary>
            Firestore in Datastore Mode.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Database.Types.ConcurrencyMode">
            <summary>
            The type of concurrency control mode for transactions.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.ConcurrencyMode.Unspecified">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.ConcurrencyMode.Optimistic">
            <summary>
            Use optimistic concurrency control by default. This mode is available
            for Cloud Firestore databases.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.ConcurrencyMode.Pessimistic">
             <summary>
             Use pessimistic concurrency control by default. This mode is available
             for Cloud Firestore databases.
            
             This is the default setting for Cloud Firestore.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.ConcurrencyMode.OptimisticWithEntityGroups">
             <summary>
             Use optimistic concurrency control with entity groups by default.
            
             This is the only available mode for Cloud Datastore.
            
             This mode is also available for Cloud Firestore with Datastore Mode but
             is not recommended.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Database.Types.AppEngineIntegrationMode">
            <summary>
            The type of App Engine integration mode.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.AppEngineIntegrationMode.Unspecified">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.AppEngineIntegrationMode.Enabled">
            <summary>
            If an App Engine application exists in the same region as this database,
            App Engine configuration will impact this database. This includes
            disabling of the application &amp; database, as well as disabling writes to
            the database.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Database.Types.AppEngineIntegrationMode.Disabled">
            <summary>
            Appengine has no affect on the ability of this database to serve
            requests.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Database.DatabaseName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.Database.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.DatabaseName">
            <summary>Resource name for the <c>Database</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.DatabaseName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.DatabaseName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.DatabaseName.ResourceNameType.ProjectDatabase">
            <summary>A resource name with pattern <c>projects/{project}/databases/{database}</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> containing the provided <paramref name="unparsedResourceName"/>
            .
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.FromProjectDatabase(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> with the pattern <c>projects/{project}/databases/{database}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.Format(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> with pattern
            <c>projects/{project}/databases/{database}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> with pattern
            <c>projects/{project}/databases/{database}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.FormatProjectDatabase(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> with pattern
            <c>projects/{project}/databases/{database}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> with pattern
            <c>projects/{project}/databases/{database}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/databases/{database}</c></description></item>
            </list>
            </remarks>
            <param name="databaseName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/databases/{database}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="databaseName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.TryParse(System.String,Google.Cloud.Firestore.Admin.V1.DatabaseName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/databases/{database}</c></description></item>
            </list>
            </remarks>
            <param name="databaseName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.TryParse(System.String,System.Boolean,Google.Cloud.Firestore.Admin.V1.DatabaseName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/databases/{database}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="databaseName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/> class from the component parts of pattern
            <c>projects/{project}/databases/{database}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.Type">
            <summary>The <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.DatabaseId">
            <summary>
            The <c>Database</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DatabaseName.IsKnownPattern">
            <summary>Whether this instance contains a resource name with a known pattern.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.ToString">
            <summary>The string representation of the resource name.</summary>
            <returns>The string representation of the resource name.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.GetHashCode">
            <summary>Returns a hash code for this resource name.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.Equals(Google.Cloud.Firestore.Admin.V1.DatabaseName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.op_Equality(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Cloud.Firestore.Admin.V1.DatabaseName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.DatabaseName.op_Inequality(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Cloud.Firestore.Admin.V1.DatabaseName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/field.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/field.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field">
             <summary>
             Represents a single field in the database.
            
             Fields are grouped by their "Collection Group", which represent all
             collections in the database with the same id.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Name">
             <summary>
             Required. A field name of the form
             `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
            
             A field path may be a simple field name, e.g. `address` or a path to fields
             within map_value , e.g. `address.city`,
             or a special field path. The only valid special field is `*`, which
             represents any field.
            
             Field paths may be quoted using ` (backtick). The only character that needs
             to be escaped within a quoted field path is the backtick character itself,
             escaped using a backslash. Special characters in field paths that
             must be quoted include: `*`, `.`,
             ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.
            
             Examples:
             (Note: Comments here are written in markdown syntax, so there is an
              additional layer of backticks to represent a code block)
             `\`address.city\`` represents a field named `address.city`, not the map key
             `city` in the field `address`.
             `\`*\`` represents a field named `*`, not any field.
            
             A special `Field` contains the default indexing settings for all fields.
             This field's resource name is:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`
             Indexes defined on this `Field` will be applied to all fields which do not
             have their own `Field` index configuration.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.IndexConfigFieldNumber">
            <summary>Field number for the "index_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.IndexConfig">
            <summary>
            The index configuration for this field. If unset, field indexing will
            revert to the configuration defined by the `ancestor_field`. To
            explicitly remove all indexes for this field, specify an index config
            with an empty list of indexes.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.TtlConfigFieldNumber">
            <summary>Field number for the "ttl_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.TtlConfig">
            <summary>
            The TTL configuration for this `Field`.
            Setting or unsetting this will enable or disable the TTL for
            documents that have this `Field`.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field.Types">
            <summary>Container for nested types declared in the Field message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig">
            <summary>
            The index configuration for this field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.IndexesFieldNumber">
            <summary>Field number for the "indexes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.Indexes">
            <summary>
            The indexes supported for this field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.UsesAncestorConfigFieldNumber">
            <summary>Field number for the "uses_ancestor_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.UsesAncestorConfig">
            <summary>
            Output only. When true, the `Field`'s index configuration is set from the
            configuration specified by the `ancestor_field`.
            When false, the `Field`'s index configuration is defined explicitly.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.AncestorFieldFieldNumber">
            <summary>Field number for the "ancestor_field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.AncestorField">
            <summary>
            Output only. Specifies the resource name of the `Field` from which this field's
            index configuration is set (when `uses_ancestor_config` is true),
            or from which it *would* be set if this field had no index configuration
            (when `uses_ancestor_config` is false).
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.RevertingFieldNumber">
            <summary>Field number for the "reverting" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Types.IndexConfig.Reverting">
            <summary>
            Output only
            When true, the `Field`'s index configuration is in the process of being
            reverted. Once complete, the index config will transition to the same
            state as the field specified by `ancestor_field`, at which point
            `uses_ancestor_config` will be `true` and `reverting` will be `false`.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig">
            <summary>
            The TTL (time-to-live) configuration for documents that have this `Field`
            set.
            Storing a timestamp value into a TTL-enabled field will be treated as
            the document's absolute expiration time. Using any other data type or
            leaving the field absent will disable the TTL for the individual document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.State">
            <summary>
            Output only. The state of the TTL configuration.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types">
            <summary>Container for nested types declared in the TtlConfig message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types.State">
            <summary>
            The state of applying the TTL configuration to all documents.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types.State.Unspecified">
            <summary>
            The state is unspecified or unknown.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types.State.Creating">
            <summary>
            The TTL is being applied. There is an active long-running operation to
            track the change. Newly written documents will have TTLs applied as
            requested. Requested TTLs on existing documents are still being
            processed. When TTLs on all existing documents have been processed, the
            state will move to 'ACTIVE'.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types.State.Active">
            <summary>
            The TTL is active for all documents.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Field.Types.TtlConfig.Types.State.NeedsRepair">
            <summary>
            The TTL configuration could not be enabled for all existing documents.
            Newly written documents will continue to have their TTL applied.
            The LRO returned when last attempting to enable TTL for this `Field`
            has failed, and may have more details.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Field.FieldName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.Field.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldName">
            <summary>Resource name for the <c>Field</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldName.ResourceNameType.ProjectDatabaseCollectionField">
            <summary>
            A resource name with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> containing the provided <paramref name="unparsedResourceName"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.FromProjectDatabaseCollectionField(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> with the pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="fieldId">The <c>Field</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.Format(System.String,System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="fieldId">The <c>Field</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.FormatProjectDatabaseCollectionField(System.String,System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="fieldId">The <c>Field</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>
            </description>
            </item>
            </list>
            </remarks>
            <param name="fieldName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>
            </description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="fieldName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.FieldName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.TryParse(System.String,Google.Cloud.Firestore.Admin.V1.FieldName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>
            </description>
            </item>
            </list>
            </remarks>
            <param name="fieldName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.TryParse(System.String,System.Boolean,Google.Cloud.Firestore.Admin.V1.FieldName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>
            </description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="fieldName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.FieldName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/> class from the component parts of pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="fieldId">The <c>Field</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.Type">
            <summary>The <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.CollectionId">
            <summary>
            The <c>Collection</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.DatabaseId">
            <summary>
            The <c>Database</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.FieldId">
            <summary>
            The <c>Field</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldName.IsKnownPattern">
            <summary>Whether this instance contains a resource name with a known pattern.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.ToString">
            <summary>The string representation of the resource name.</summary>
            <returns>The string representation of the resource name.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.GetHashCode">
            <summary>Returns a hash code for this resource name.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.Equals(Google.Cloud.Firestore.Admin.V1.FieldName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.op_Equality(Google.Cloud.Firestore.Admin.V1.FieldName,Google.Cloud.Firestore.Admin.V1.FieldName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FieldName.op_Inequality(Google.Cloud.Firestore.Admin.V1.FieldName,Google.Cloud.Firestore.Admin.V1.FieldName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/firestore_admin.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/firestore_admin.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest">
            <summary>
            A request to list the Firestore Databases in all locations for a project.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest.Parent">
            <summary>
            Required. A parent name of the form
            `projects/{project_id}`
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest.ParentAsProjectName">
            <summary>
            <see cref="T:Google.Api.Gax.ResourceNames.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest.Parent"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListDatabasesResponse">
            <summary>
            The list of databases for a project.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListDatabasesResponse.DatabasesFieldNumber">
            <summary>Field number for the "databases" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListDatabasesResponse.Databases">
            <summary>
            The databases in the project.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest">
            <summary>
            The request for [FirestoreAdmin.GetDatabase][google.firestore.admin.v1.FirestoreAdmin.GetDatabase].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest.Name">
            <summary>
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest.DatabaseName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest">
            <summary>
            The request for [FirestoreAdmin.UpdateDatabase][google.firestore.admin.v1.FirestoreAdmin.UpdateDatabase].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest.Database">
            <summary>
            Required. The database to update.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest.UpdateMask">
            <summary>
            The list of fields to be updated.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.UpdateDatabaseMetadata">
            <summary>
            Metadata related to the update database operation.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest">
            <summary>
            The request for [FirestoreAdmin.CreateIndex][google.firestore.admin.v1.FirestoreAdmin.CreateIndex].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.Parent">
            <summary>
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.IndexFieldNumber">
            <summary>Field number for the "index" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.Index">
            <summary>
            Required. The composite index to create.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.ParentAsCollectionGroupName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.CreateIndexRequest.Parent"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest">
            <summary>
            The request for [FirestoreAdmin.ListIndexes][google.firestore.admin.v1.FirestoreAdmin.ListIndexes].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.Parent">
            <summary>
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.Filter">
            <summary>
            The filter to apply to list results.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.PageSize">
            <summary>
            The number of results to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.PageToken">
            <summary>
            A page token, returned from a previous call to
            [FirestoreAdmin.ListIndexes][google.firestore.admin.v1.FirestoreAdmin.ListIndexes], that may be used to get the next
            page of results.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.ParentAsCollectionGroupName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.ListIndexesRequest.Parent"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse">
            <summary>
            The response for [FirestoreAdmin.ListIndexes][google.firestore.admin.v1.FirestoreAdmin.ListIndexes].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse.IndexesFieldNumber">
            <summary>Field number for the "indexes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse.Indexes">
            <summary>
            The requested indexes.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse.NextPageToken">
            <summary>
            A page token that may be used to request another page of results. If blank,
            this is the last page.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.ListIndexesResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.GetIndexRequest">
            <summary>
            The request for [FirestoreAdmin.GetIndex][google.firestore.admin.v1.FirestoreAdmin.GetIndex].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.GetIndexRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetIndexRequest.Name">
            <summary>
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetIndexRequest.IndexName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.GetIndexRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest">
            <summary>
            The request for [FirestoreAdmin.DeleteIndex][google.firestore.admin.v1.FirestoreAdmin.DeleteIndex].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest.Name">
            <summary>
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest.IndexName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest">
            <summary>
            The request for [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest.Field">
            <summary>
            Required. The field to be updated.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest.UpdateMask">
            <summary>
            A mask, relative to the field. If specified, only configuration specified
            by this field_mask will be updated in the field.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.GetFieldRequest">
            <summary>
            The request for [FirestoreAdmin.GetField][google.firestore.admin.v1.FirestoreAdmin.GetField].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.GetFieldRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetFieldRequest.Name">
            <summary>
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.GetFieldRequest.FieldName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.FieldName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.GetFieldRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest">
            <summary>
            The request for [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.Parent">
            <summary>
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.Filter">
            <summary>
            The filter to apply to list results. Currently,
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with a filter that includes
            `indexConfig.usesAncestorConfig:false` .
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.PageSize">
            <summary>
            The number of results to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.PageToken">
            <summary>
            A page token, returned from a previous call to
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields], that may be used to get the next
            page of results.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.ParentAsCollectionGroupName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.ListFieldsRequest.Parent"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse">
            <summary>
            The response for [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse.Fields">
            <summary>
            The requested fields.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse.NextPageToken">
            <summary>
            A page token that may be used to request another page of results. If blank,
            this is the last page.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.ListFieldsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest">
            <summary>
            The request for [FirestoreAdmin.ExportDocuments][google.firestore.admin.v1.FirestoreAdmin.ExportDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.Name">
            <summary>
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.CollectionIdsFieldNumber">
            <summary>Field number for the "collection_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.CollectionIds">
            <summary>
            Which collection ids to export. Unspecified means all collections.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.OutputUriPrefixFieldNumber">
            <summary>Field number for the "output_uri_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.OutputUriPrefix">
            <summary>
            The output URI. Currently only supports Google Cloud Storage URIs of the
            form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name
            of the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional
            Google Cloud Storage namespace path. When
            choosing a name, be sure to consider Google Cloud Storage naming
            guidelines: https://cloud.google.com/storage/docs/naming.
            If the URI is a bucket (without a namespace path), a prefix will be
            generated based on the start time.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.DatabaseName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest">
            <summary>
            The request for [FirestoreAdmin.ImportDocuments][google.firestore.admin.v1.FirestoreAdmin.ImportDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.Name">
            <summary>
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.CollectionIdsFieldNumber">
            <summary>Field number for the "collection_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.CollectionIds">
            <summary>
            Which collection ids to import. Unspecified means all collections included
            in the import.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.InputUriPrefixFieldNumber">
            <summary>Field number for the "input_uri_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.InputUriPrefix">
            <summary>
            Location of the exported files.
            This must match the output_uri_prefix of an ExportDocumentsResponse from
            an export that has completed successfully.
            See:
            [google.firestore.admin.v1.ExportDocumentsResponse.output_uri_prefix][google.firestore.admin.v1.ExportDocumentsResponse.output_uri_prefix].
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.DatabaseName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.DatabaseName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings">
            <summary>Settings for <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> instances.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.GetDefault">
            <summary>Get a new instance of the default <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/>.</summary>
            <returns>A new instance of the default <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.#ctor">
            <summary>Constructs a new <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/> object with default settings.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.CreateIndexSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.CreateIndex</c> and <c>FirestoreAdminClient.CreateIndexAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.CreateIndexOperationsSettings">
            <summary>
            Long Running Operation settings for calls to <c>FirestoreAdminClient.CreateIndex</c> and
            <c>FirestoreAdminClient.CreateIndexAsync</c>.
            </summary>
            <remarks>
            Uses default <see cref="T:Google.Api.Gax.PollSettings"/> of:
            <list type="bullet">
            <item><description>Initial delay: 20 seconds.</description></item>
            <item><description>Delay multiplier: 1.5</description></item>
            <item><description>Maximum delay: 45 seconds.</description></item>
            <item><description>Total timeout: 24 hours.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ListIndexesSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.ListIndexes</c> and <c>FirestoreAdminClient.ListIndexesAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.Unavailable"/>,
            <see cref="F:Grpc.Core.StatusCode.Internal"/>, <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.GetIndexSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.GetIndex</c> and <c>FirestoreAdminClient.GetIndexAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.Unavailable"/>,
            <see cref="F:Grpc.Core.StatusCode.Internal"/>, <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.DeleteIndexSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.DeleteIndex</c> and <c>FirestoreAdminClient.DeleteIndexAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.Unavailable"/>,
            <see cref="F:Grpc.Core.StatusCode.Internal"/>, <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.GetFieldSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.GetField</c> and <c>FirestoreAdminClient.GetFieldAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.Unavailable"/>,
            <see cref="F:Grpc.Core.StatusCode.Internal"/>, <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.UpdateFieldSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.UpdateField</c> and <c>FirestoreAdminClient.UpdateFieldAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.UpdateFieldOperationsSettings">
            <summary>
            Long Running Operation settings for calls to <c>FirestoreAdminClient.UpdateField</c> and
            <c>FirestoreAdminClient.UpdateFieldAsync</c>.
            </summary>
            <remarks>
            Uses default <see cref="T:Google.Api.Gax.PollSettings"/> of:
            <list type="bullet">
            <item><description>Initial delay: 20 seconds.</description></item>
            <item><description>Delay multiplier: 1.5</description></item>
            <item><description>Maximum delay: 45 seconds.</description></item>
            <item><description>Total timeout: 24 hours.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ListFieldsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.ListFields</c> and <c>FirestoreAdminClient.ListFieldsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.Unavailable"/>,
            <see cref="F:Grpc.Core.StatusCode.Internal"/>, <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ExportDocumentsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.ExportDocuments</c> and <c>FirestoreAdminClient.ExportDocumentsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ExportDocumentsOperationsSettings">
            <summary>
            Long Running Operation settings for calls to <c>FirestoreAdminClient.ExportDocuments</c> and
            <c>FirestoreAdminClient.ExportDocumentsAsync</c>.
            </summary>
            <remarks>
            Uses default <see cref="T:Google.Api.Gax.PollSettings"/> of:
            <list type="bullet">
            <item><description>Initial delay: 20 seconds.</description></item>
            <item><description>Delay multiplier: 1.5</description></item>
            <item><description>Maximum delay: 45 seconds.</description></item>
            <item><description>Total timeout: 24 hours.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ImportDocumentsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.ImportDocuments</c> and <c>FirestoreAdminClient.ImportDocumentsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ImportDocumentsOperationsSettings">
            <summary>
            Long Running Operation settings for calls to <c>FirestoreAdminClient.ImportDocuments</c> and
            <c>FirestoreAdminClient.ImportDocumentsAsync</c>.
            </summary>
            <remarks>
            Uses default <see cref="T:Google.Api.Gax.PollSettings"/> of:
            <list type="bullet">
            <item><description>Initial delay: 20 seconds.</description></item>
            <item><description>Delay multiplier: 1.5</description></item>
            <item><description>Maximum delay: 45 seconds.</description></item>
            <item><description>Total timeout: 24 hours.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.GetDatabaseSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.GetDatabase</c> and <c>FirestoreAdminClient.GetDatabaseAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.ListDatabasesSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.ListDatabases</c> and <c>FirestoreAdminClient.ListDatabasesAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.UpdateDatabaseSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreAdminClient.UpdateDatabase</c> and <c>FirestoreAdminClient.UpdateDatabaseAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.UpdateDatabaseOperationsSettings">
            <summary>
            Long Running Operation settings for calls to <c>FirestoreAdminClient.UpdateDatabase</c> and
            <c>FirestoreAdminClient.UpdateDatabaseAsync</c>.
            </summary>
            <remarks>
            Uses default <see cref="T:Google.Api.Gax.PollSettings"/> of:
            <list type="bullet">
            <item><description>Initial delay: 20 seconds.</description></item>
            <item><description>Delay multiplier: 1.5</description></item>
            <item><description>Maximum delay: 45 seconds.</description></item>
            <item><description>Total timeout: 24 hours.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.LocationsSettings">
            <summary>
            The settings to use for the <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with the client.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings.Clone">
            <summary>Creates a deep clone of this object, with all the same property values.</summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder">
            <summary>
            Builder class for <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> to provide simple configuration of credentials, endpoint
            etc.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder.Settings">
            <summary>The settings to use for RPCs, or <c>null</c> for the default settings.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder.#ctor">
            <summary>Creates a new builder with default settings.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder.Build">
            <summary>Builds the resulting client.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder.BuildAsync(System.Threading.CancellationToken)">
            <summary>Builds the resulting client asynchronously.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder.GetChannelPool">
            <summary>Returns the channel pool to use when no other options are specified.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient">
            <summary>FirestoreAdmin client wrapper, for convenient use.</summary>
            <remarks>
            The Cloud Firestore Admin API.
            
            This API provides several administrative services for Cloud Firestore.
            
            Project, Database, Namespace, Collection, Collection Group, and Document are
            used as defined in the Google Cloud Firestore API.
            
            Operation: An Operation represents work being performed in the background.
            
            The index service manages Cloud Firestore indexes.
            
            Index creation is performed asynchronously.
            An Operation resource is created for each such asynchronous operation.
            The state of the operation (including any errors encountered)
            may be queried via the Operation resource.
            
            The Operations collection provides a record of actions performed for the
            specified Project (including any Operations in progress). Operations are not
            created directly but through calls on other collections or resources.
            
            An Operation that is done may be deleted so that it is no longer listed as
            part of the Operation collection. Operations are garbage collected after
            30 days. By default, ListOperations will only return in progress and failed
            operations. To list completed operation, issue a ListOperations request with
            the filter `done: true`.
            
            Operations are created by service `FirestoreAdmin`, but are accessed via
            service `google.longrunning.Operations`.
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DefaultEndpoint">
            <summary>
            The default endpoint for the FirestoreAdmin service, which is a host of "firestore.googleapis.com" and a
            port of 443.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DefaultScopes">
            <summary>The default FirestoreAdmin scopes.</summary>
            <remarks>
            The default FirestoreAdmin scopes are:
            <list type="bullet">
            <item><description>https://www.googleapis.com/auth/cloud-platform</description></item>
            <item><description>https://www.googleapis.com/auth/datastore</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ServiceMetadata">
            <summary>The service metadata associated with this client type.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> using the default credentials, endpoint and
            settings. To specify custom credentials or other settings, use <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder"/>.
            </summary>
            <param name="cancellationToken">
            The <see cref="T:System.Threading.CancellationToken"/> to use while creating the client.
            </param>
            <returns>The task representing the created <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.Create">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> using the default credentials, endpoint and
            settings. To specify custom credentials or other settings, use <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.Create(Grpc.Core.CallInvoker,Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> which uses the specified call invoker for remote operations.
            </summary>
            <param name="callInvoker">
            The <see cref="T:Grpc.Core.CallInvoker"/> for remote operations. Must not be null.
            </param>
            <param name="settings">Optional <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/>.</param>
            <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.Create"/> and
            <see cref="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateAsync(System.Threading.CancellationToken)"/>. Channels which weren't automatically created are not
            affected.
            </summary>
            <remarks>
            After calling this method, further calls to <see cref="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.Create"/> and
            <see cref="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateAsync(System.Threading.CancellationToken)"/> will create new channels, which could in turn be shut down
            by another call to this method.
            </remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GrpcClient">
            <summary>The underlying gRPC FirestoreAdmin client</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.LocationsClient">
            <summary>The <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with this client.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndex(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexOperationsClient">
            <summary>The long-running operations client for <c>CreateIndex</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceCreateIndex(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Poll an operation once, using an <c>operationName</c> from a previous invocation of <c>CreateIndex</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceCreateIndexAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Asynchronously poll an operation once, using an <c>operationName</c> from a previous invocation of
            <c>CreateIndex</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndex(System.String,Google.Cloud.Firestore.Admin.V1.Index,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(System.String,Google.Cloud.Firestore.Admin.V1.Index,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(System.String,Google.Cloud.Firestore.Admin.V1.Index,System.Threading.CancellationToken)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndex(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,Google.Cloud.Firestore.Admin.V1.Index,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,Google.Cloud.Firestore.Admin.V1.Index,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,Google.Cloud.Firestore.Admin.V1.Index,System.Threading.CancellationToken)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="index">
            Required. The composite index to create.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexes(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexesAsync(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexes(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexesAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexes(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListIndexesAsync(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndex(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndex(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndex(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.IndexName,System.Threading.CancellationToken)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndex(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndex(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndex(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.IndexName,System.Threading.CancellationToken)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetField(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetField(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetField(Google.Cloud.Firestore.Admin.V1.FieldName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.FieldName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.FieldName,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateField(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateFieldOperationsClient">
            <summary>The long-running operations client for <c>UpdateField</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceUpdateField(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Poll an operation once, using an <c>operationName</c> from a previous invocation of <c>UpdateField</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceUpdateFieldAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Asynchronously poll an operation once, using an <c>operationName</c> from a previous invocation of
            <c>UpdateField</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateField(Google.Cloud.Firestore.Admin.V1.Field,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="field">
            Required. The field to be updated.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.Field,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="field">
            Required. The field to be updated.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.Field,System.Threading.CancellationToken)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="field">
            Required. The field to be updated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFields(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFieldsAsync(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFields(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFieldsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFields(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListFieldsAsync(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocuments(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsOperationsClient">
            <summary>The long-running operations client for <c>ExportDocuments</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceExportDocuments(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Poll an operation once, using an <c>operationName</c> from a previous invocation of <c>ExportDocuments</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceExportDocumentsAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Asynchronously poll an operation once, using an <c>operationName</c> from a previous invocation of
            <c>ExportDocuments</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocuments(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocuments(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,System.Threading.CancellationToken)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="name">
            Required. Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocuments(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsOperationsClient">
            <summary>The long-running operations client for <c>ImportDocuments</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceImportDocuments(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Poll an operation once, using an <c>operationName</c> from a previous invocation of <c>ImportDocuments</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceImportDocumentsAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Asynchronously poll an operation once, using an <c>operationName</c> from a previous invocation of
            <c>ImportDocuments</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocuments(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocuments(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,System.Threading.CancellationToken)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="name">
            Required. Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabase(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabase(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabase(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.DatabaseName,System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="name">
            Required. A name of the form
            `projects/{project_id}/databases/{database_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabases(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,System.Threading.CancellationToken)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabases(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabases(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.ListDatabasesAsync(Google.Api.Gax.ResourceNames.ProjectName,System.Threading.CancellationToken)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="parent">
            Required. A parent name of the form
            `projects/{project_id}`
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabaseOperationsClient">
            <summary>The long-running operations client for <c>UpdateDatabase</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceUpdateDatabase(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Poll an operation once, using an <c>operationName</c> from a previous invocation of <c>UpdateDatabase</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.PollOnceUpdateDatabaseAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Asynchronously poll an operation once, using an <c>operationName</c> from a previous invocation of
            <c>UpdateDatabase</c>.
            </summary>
            <param name="operationName">
            The name of a previously invoked operation. Must not be <c>null</c> or empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the result of polling the operation.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.Database,Google.Protobuf.WellKnownTypes.FieldMask,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="database">
            Required. The database to update.
            </param>
            <param name="updateMask">
            The list of fields to be updated.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.Database,Google.Protobuf.WellKnownTypes.FieldMask,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="database">
            Required. The database to update.
            </param>
            <param name="updateMask">
            The list of fields to be updated.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.Database,Google.Protobuf.WellKnownTypes.FieldMask,System.Threading.CancellationToken)">
            <summary>
            Updates a database.
            </summary>
            <param name="database">
            Required. The database to update.
            </param>
            <param name="updateMask">
            The list of fields to be updated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl">
            <summary>FirestoreAdmin client wrapper implementation, for convenient use.</summary>
            <remarks>
            The Cloud Firestore Admin API.
            
            This API provides several administrative services for Cloud Firestore.
            
            Project, Database, Namespace, Collection, Collection Group, and Document are
            used as defined in the Google Cloud Firestore API.
            
            Operation: An Operation represents work being performed in the background.
            
            The index service manages Cloud Firestore indexes.
            
            Index creation is performed asynchronously.
            An Operation resource is created for each such asynchronous operation.
            The state of the operation (including any errors encountered)
            may be queried via the Operation resource.
            
            The Operations collection provides a record of actions performed for the
            specified Project (including any Operations in progress). Operations are not
            created directly but through calls on other collections or resources.
            
            An Operation that is done may be deleted so that it is no longer listed as
            part of the Operation collection. Operations are garbage collected after
            30 days. By default, ListOperations will only return in progress and failed
            operations. To list completed operation, issue a ListOperations request with
            the filter `done: true`.
            
            Operations are created by service `FirestoreAdmin`, but are accessed via
            service `google.longrunning.Operations`.
            </remarks>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.#ctor(Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient,Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructs a client wrapper for the FirestoreAdmin service, with the specified gRPC client and settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminSettings"/> used within this client.</param>
            <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to use within this client.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GrpcClient">
            <summary>The underlying gRPC FirestoreAdmin client</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.LocationsClient">
            <summary>The <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with this client.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.CreateIndexOperationsClient">
            <summary>The long-running operations client for <c>CreateIndex</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.CreateIndex(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListIndexes(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListIndexesAsync(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Index"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetIndex(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.DeleteIndex(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetField(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateFieldOperationsClient">
            <summary>The long-running operations client for <c>UpdateField</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateField(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a field configuration. Currently, field updates apply only to
            single field index configuration. However, calls to
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
            changing any configuration that the caller isn't aware of. The field mask
            should be specified as: `{ paths: "index_config" }`.
            
            This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
            track the status of the field update. The metadata for
            the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
            To configure the default field settings for the database, use
            the special `Field` with resource name:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListFields(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListFieldsAsync(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the field configuration and metadata for this database.
            
            Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
            that have been explicitly overridden. To issue this query, call
            [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
            `indexConfig.usesAncestorConfig:false` .
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.Admin.V1.Field"/> resources.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ExportDocumentsOperationsClient">
            <summary>The long-running operations client for <c>ExportDocuments</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ExportDocuments(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Exports a copy of all or a subset of documents from Google Cloud Firestore
            to another storage system, such as Google Cloud Storage. Recent updates to
            documents may not be reflected in the export. The export occurs in the
            background and its progress can be monitored and managed via the
            Operation resource that is created. The output of an export may only be
            used once the associated operation is done. If an export operation is
            cancelled before completion it may leave partial data behind in Google
            Cloud Storage.
            
            For more details on export behavior and output format, refer to:
            https://cloud.google.com/firestore/docs/manage-data/export-import
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ImportDocumentsOperationsClient">
            <summary>The long-running operations client for <c>ImportDocuments</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ImportDocuments(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetDatabase(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListDatabases(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.ListDatabasesAsync(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateDatabaseOperationsClient">
            <summary>The long-running operations client for <c>UpdateDatabase</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientImpl.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin">
             <summary>
             The Cloud Firestore Admin API.
            
             This API provides several administrative services for Cloud Firestore.
            
             Project, Database, Namespace, Collection, Collection Group, and Document are
             used as defined in the Google Cloud Firestore API.
            
             Operation: An Operation represents work being performed in the background.
            
             The index service manages Cloud Firestore indexes.
            
             Index creation is performed asynchronously.
             An Operation resource is created for each such asynchronous operation.
             The state of the operation (including any errors encountered)
             may be queried via the Operation resource.
            
             The Operations collection provides a record of actions performed for the
             specified Project (including any Operations in progress). Operations are not
             created directly but through calls on other collections or resources.
            
             An Operation that is done may be deleted so that it is no longer listed as
             part of the Operation collection. Operations are garbage collected after
             30 days. By default, ListOperations will only return in progress and failed
             operations. To list completed operation, issue a ListOperations request with
             the filter `done: true`.
            
             Operations are created by service `FirestoreAdmin`, but are accessed via
             service `google.longrunning.Operations`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient">
            <summary>Client for FirestoreAdmin</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateOperationsClient">
            <summary>
            Creates a new instance of <see cref="T:Google.LongRunning.Operations.OperationsClient"/> using the same call invoker as
            this client.
            </summary>
            <returns>A new Operations client for the same target as this client.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateLocationsClient">
            <summary>
            Creates a new instance of <see cref="T:Google.Cloud.Location.Locations.LocationsClient"/> using the same call invoker as
            this client.
            </summary>
            <returns>
            A new <see cref="T:Google.Cloud.Location.Locations.LocationsClient"/> for the same target as this client.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for FirestoreAdmin</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for FirestoreAdmin that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateIndex(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateIndex(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.CreateIndexAsync(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListIndexes(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListIndexes(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListIndexesAsync(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListIndexesAsync(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetIndex(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetIndex(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetIndexAsync(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.DeleteIndex(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.DeleteIndex(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.DeleteIndexAsync(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetField(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetField(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetFieldAsync(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateField(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Updates a field configuration. Currently, field updates apply only to
             single field index configuration. However, calls to
             [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
             changing any configuration that the caller isn't aware of. The field mask
             should be specified as: `{ paths: "index_config" }`.
            
             This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
             track the status of the field update. The metadata for
             the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
             To configure the default field settings for the database, use
             the special `Field` with resource name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateField(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Grpc.Core.CallOptions)">
             <summary>
             Updates a field configuration. Currently, field updates apply only to
             single field index configuration. However, calls to
             [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
             changing any configuration that the caller isn't aware of. The field mask
             should be specified as: `{ paths: "index_config" }`.
            
             This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
             track the status of the field update. The metadata for
             the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
             To configure the default field settings for the database, use
             the special `Field` with resource name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Updates a field configuration. Currently, field updates apply only to
             single field index configuration. However, calls to
             [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
             changing any configuration that the caller isn't aware of. The field mask
             should be specified as: `{ paths: "index_config" }`.
            
             This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
             track the status of the field update. The metadata for
             the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
             To configure the default field settings for the database, use
             the special `Field` with resource name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateFieldAsync(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Grpc.Core.CallOptions)">
             <summary>
             Updates a field configuration. Currently, field updates apply only to
             single field index configuration. However, calls to
             [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
             changing any configuration that the caller isn't aware of. The field mask
             should be specified as: `{ paths: "index_config" }`.
            
             This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
             track the status of the field update. The metadata for
             the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
             To configure the default field settings for the database, use
             the special `Field` with resource name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListFields(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Lists the field configuration and metadata for this database.
            
             Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
             that have been explicitly overridden. To issue this query, call
             [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
             `indexConfig.usesAncestorConfig:false` .
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListFields(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Grpc.Core.CallOptions)">
             <summary>
             Lists the field configuration and metadata for this database.
            
             Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
             that have been explicitly overridden. To issue this query, call
             [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
             `indexConfig.usesAncestorConfig:false` .
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListFieldsAsync(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Lists the field configuration and metadata for this database.
            
             Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
             that have been explicitly overridden. To issue this query, call
             [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
             `indexConfig.usesAncestorConfig:false` .
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListFieldsAsync(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Grpc.Core.CallOptions)">
             <summary>
             Lists the field configuration and metadata for this database.
            
             Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
             that have been explicitly overridden. To issue this query, call
             [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
             `indexConfig.usesAncestorConfig:false` .
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ExportDocuments(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Exports a copy of all or a subset of documents from Google Cloud Firestore
             to another storage system, such as Google Cloud Storage. Recent updates to
             documents may not be reflected in the export. The export occurs in the
             background and its progress can be monitored and managed via the
             Operation resource that is created. The output of an export may only be
             used once the associated operation is done. If an export operation is
             cancelled before completion it may leave partial data behind in Google
             Cloud Storage.
            
             For more details on export behavior and output format, refer to:
             https://cloud.google.com/firestore/docs/manage-data/export-import
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ExportDocuments(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Grpc.Core.CallOptions)">
             <summary>
             Exports a copy of all or a subset of documents from Google Cloud Firestore
             to another storage system, such as Google Cloud Storage. Recent updates to
             documents may not be reflected in the export. The export occurs in the
             background and its progress can be monitored and managed via the
             Operation resource that is created. The output of an export may only be
             used once the associated operation is done. If an export operation is
             cancelled before completion it may leave partial data behind in Google
             Cloud Storage.
            
             For more details on export behavior and output format, refer to:
             https://cloud.google.com/firestore/docs/manage-data/export-import
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Exports a copy of all or a subset of documents from Google Cloud Firestore
             to another storage system, such as Google Cloud Storage. Recent updates to
             documents may not be reflected in the export. The export occurs in the
             background and its progress can be monitored and managed via the
             Operation resource that is created. The output of an export may only be
             used once the associated operation is done. If an export operation is
             cancelled before completion it may leave partial data behind in Google
             Cloud Storage.
            
             For more details on export behavior and output format, refer to:
             https://cloud.google.com/firestore/docs/manage-data/export-import
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ExportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Grpc.Core.CallOptions)">
             <summary>
             Exports a copy of all or a subset of documents from Google Cloud Firestore
             to another storage system, such as Google Cloud Storage. Recent updates to
             documents may not be reflected in the export. The export occurs in the
             background and its progress can be monitored and managed via the
             Operation resource that is created. The output of an export may only be
             used once the associated operation is done. If an export operation is
             cancelled before completion it may leave partial data behind in Google
             Cloud Storage.
            
             For more details on export behavior and output format, refer to:
             https://cloud.google.com/firestore/docs/manage-data/export-import
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ImportDocuments(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ImportDocuments(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Grpc.Core.CallOptions)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ImportDocumentsAsync(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Grpc.Core.CallOptions)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetDatabase(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetDatabase(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.GetDatabaseAsync(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListDatabases(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListDatabases(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Grpc.Core.CallOptions)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListDatabasesAsync(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.ListDatabasesAsync(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Grpc.Core.CallOptions)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.UpdateDatabaseAsync(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase">
            <summary>Base class for server-side implementations of FirestoreAdmin</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.CreateIndex(Google.Cloud.Firestore.Admin.V1.CreateIndexRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Creates a composite index. This returns a [google.longrunning.Operation][google.longrunning.Operation]
            which may be used to track the status of the creation. The metadata for
            the operation will be the type [IndexOperationMetadata][google.firestore.admin.v1.IndexOperationMetadata].
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.ListIndexes(Google.Cloud.Firestore.Admin.V1.ListIndexesRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists composite indexes.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.GetIndex(Google.Cloud.Firestore.Admin.V1.GetIndexRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets a composite index.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.DeleteIndex(Google.Cloud.Firestore.Admin.V1.DeleteIndexRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes a composite index.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.GetField(Google.Cloud.Firestore.Admin.V1.GetFieldRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the metadata and configuration for a Field.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.UpdateField(Google.Cloud.Firestore.Admin.V1.UpdateFieldRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Updates a field configuration. Currently, field updates apply only to
             single field index configuration. However, calls to
             [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField] should provide a field mask to avoid
             changing any configuration that the caller isn't aware of. The field mask
             should be specified as: `{ paths: "index_config" }`.
            
             This call returns a [google.longrunning.Operation][google.longrunning.Operation] which may be used to
             track the status of the field update. The metadata for
             the operation will be the type [FieldOperationMetadata][google.firestore.admin.v1.FieldOperationMetadata].
            
             To configure the default field settings for the database, use
             the special `Field` with resource name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.ListFields(Google.Cloud.Firestore.Admin.V1.ListFieldsRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Lists the field configuration and metadata for this database.
            
             Currently, [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] only supports listing fields
             that have been explicitly overridden. To issue this query, call
             [FirestoreAdmin.ListFields][google.firestore.admin.v1.FirestoreAdmin.ListFields] with the filter set to
             `indexConfig.usesAncestorConfig:false` .
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.ExportDocuments(Google.Cloud.Firestore.Admin.V1.ExportDocumentsRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Exports a copy of all or a subset of documents from Google Cloud Firestore
             to another storage system, such as Google Cloud Storage. Recent updates to
             documents may not be reflected in the export. The export occurs in the
             background and its progress can be monitored and managed via the
             Operation resource that is created. The output of an export may only be
             used once the associated operation is done. If an export operation is
             cancelled before completion it may leave partial data behind in Google
             Cloud Storage.
            
             For more details on export behavior and output format, refer to:
             https://cloud.google.com/firestore/docs/manage-data/export-import
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.ImportDocuments(Google.Cloud.Firestore.Admin.V1.ImportDocumentsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Imports documents into Google Cloud Firestore. Existing documents with the
            same name are overwritten. The import occurs in the background and its
            progress can be monitored and managed via the Operation resource that is
            created. If an ImportDocuments operation is cancelled, it is possible
            that a subset of the data has already been imported to Cloud Firestore.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.GetDatabase(Google.Cloud.Firestore.Admin.V1.GetDatabaseRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets information about a database.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.ListDatabases(Google.Cloud.Firestore.Admin.V1.ListDatabasesRequest,Grpc.Core.ServerCallContext)">
            <summary>
            List all the databases in the project.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase.UpdateDatabase(Google.Cloud.Firestore.Admin.V1.UpdateDatabaseRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates a database.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.BindService(Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.BindService(Grpc.Core.ServiceBinderBase,Google.Cloud.Firestore.Admin.V1.FirestoreAdmin.FirestoreAdminBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.LocationName">
            <summary>Resource name for the <c>Location</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.LocationName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.LocationName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.LocationName.ResourceNameType.ProjectLocation">
            <summary>A resource name with pattern <c>projects/{project}/locations/{location}</c>.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> containing the provided <paramref name="unparsedResourceName"/>
            .
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.FromProjectLocation(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> with the pattern <c>projects/{project}/locations/{location}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="locationId">The <c>Location</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.Format(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> with pattern
            <c>projects/{project}/locations/{location}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="locationId">The <c>Location</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> with pattern
            <c>projects/{project}/locations/{location}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.FormatProjectLocation(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> with pattern
            <c>projects/{project}/locations/{location}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="locationId">The <c>Location</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> with pattern
            <c>projects/{project}/locations/{location}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/locations/{location}</c></description></item>
            </list>
            </remarks>
            <param name="locationName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/locations/{location}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="locationName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.LocationName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.TryParse(System.String,Google.Cloud.Firestore.Admin.V1.LocationName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/locations/{location}</c></description></item>
            </list>
            </remarks>
            <param name="locationName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.TryParse(System.String,System.Boolean,Google.Cloud.Firestore.Admin.V1.LocationName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/locations/{location}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="locationName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.LocationName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName"/> class from the component parts of pattern
            <c>projects/{project}/locations/{location}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="locationId">The <c>Location</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationName.Type">
            <summary>The <see cref="T:Google.Cloud.Firestore.Admin.V1.LocationName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationName.LocationId">
            <summary>
            The <c>Location</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationName.IsKnownPattern">
            <summary>Whether this instance contains a resource name with a known pattern.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.ToString">
            <summary>The string representation of the resource name.</summary>
            <returns>The string representation of the resource name.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.GetHashCode">
            <summary>Returns a hash code for this resource name.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.Equals(Google.Cloud.Firestore.Admin.V1.LocationName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.op_Equality(Google.Cloud.Firestore.Admin.V1.LocationName,Google.Cloud.Firestore.Admin.V1.LocationName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.LocationName.op_Inequality(Google.Cloud.Firestore.Admin.V1.LocationName,Google.Cloud.Firestore.Admin.V1.LocationName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName">
            <summary>Resource name for the <c>CollectionGroup</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ResourceNameType.ProjectDatabaseCollection">
            <summary>
            A resource name with pattern <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>
            .
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> containing the provided
            <paramref name="unparsedResourceName"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.FromProjectDatabaseCollection(System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> with the pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Format(System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.FormatProjectDatabaseCollection(System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Parse(System.String)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description><c>projects/{project}/databases/{database}/collectionGroups/{collection}</c></description>
            </item>
            </list>
            </remarks>
            <param name="collectionGroupName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description><c>projects/{project}/databases/{database}/collectionGroups/{collection}</c></description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="collectionGroupName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.TryParse(System.String,Google.Cloud.Firestore.Admin.V1.CollectionGroupName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description><c>projects/{project}/databases/{database}/collectionGroups/{collection}</c></description>
            </item>
            </list>
            </remarks>
            <param name="collectionGroupName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.TryParse(System.String,System.Boolean,Google.Cloud.Firestore.Admin.V1.CollectionGroupName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> instance;
            optionally allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description><c>projects/{project}/databases/{database}/collectionGroups/{collection}</c></description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="collectionGroupName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName"/> class from the component parts of pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Type">
            <summary>The <see cref="T:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.CollectionId">
            <summary>
            The <c>Collection</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.DatabaseId">
            <summary>
            The <c>Database</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.IsKnownPattern">
            <summary>Whether this instance contains a resource name with a known pattern.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.ToString">
            <summary>The string representation of the resource name.</summary>
            <returns>The string representation of the resource name.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.GetHashCode">
            <summary>Returns a hash code for this resource name.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.Equals(Google.Cloud.Firestore.Admin.V1.CollectionGroupName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.op_Equality(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,Google.Cloud.Firestore.Admin.V1.CollectionGroupName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.CollectionGroupName.op_Inequality(Google.Cloud.Firestore.Admin.V1.CollectionGroupName,Google.Cloud.Firestore.Admin.V1.CollectionGroupName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.IndexReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/index.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/index.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index">
            <summary>
            Cloud Firestore indexes enable simple and complex queries against
            documents in a database.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.Name">
            <summary>
            Output only. A server defined name for this index.
            The form of this name for composite indexes will be:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`
            For single field indexes, this field will be empty.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.QueryScopeFieldNumber">
            <summary>Field number for the "query_scope" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.QueryScope">
             <summary>
             Indexes with a collection query scope specified allow queries
             against a collection that is the child of a specific document, specified at
             query time, and that has the same collection id.
            
             Indexes with a collection group query scope specified allow queries against
             all collections descended from a specific document, specified at query
             time, and that have the same collection id as this index.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.Fields">
             <summary>
             The fields supported by this index.
            
             For composite indexes, this is always 2 or more fields.
             The last field entry is always for the field path `__name__`. If, on
             creation, `__name__` was not specified as the last field, it will be added
             automatically with the same direction as that of the last field defined. If
             the final field in a composite index is not directional, the `__name__`
             will be ordered ASCENDING (unless explicitly specified).
            
             For single field indexes, this will always be exactly one entry with a
             field path equal to the field path of the associated field.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.State">
            <summary>
            Output only. The serving state of the index.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types">
            <summary>Container for nested types declared in the Index message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.QueryScope">
            <summary>
            Query Scope defines the scope at which a query is run. This is specified on
            a StructuredQuery's `from` field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.QueryScope.Unspecified">
            <summary>
            The query scope is unspecified. Not a valid option.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.QueryScope.Collection">
            <summary>
            Indexes with a collection query scope specified allow queries
            against a collection that is the child of a specific document, specified
            at query time, and that has the collection id specified by the index.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.QueryScope.CollectionGroup">
            <summary>
            Indexes with a collection group query scope specified allow queries
            against all collections that has the collection id specified by the
            index.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.State">
            <summary>
            The state of an index. During index creation, an index will be in the
            `CREATING` state. If the index is created successfully, it will transition
            to the `READY` state. If the index creation encounters a problem, the index
            will transition to the `NEEDS_REPAIR` state.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.State.Unspecified">
            <summary>
            The state is unspecified.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.State.Creating">
            <summary>
            The index is being created.
            There is an active long-running operation for the index.
            The index is updated when writing a document.
            Some index data may exist.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.State.Ready">
            <summary>
            The index is ready to be used.
            The index is updated when writing a document.
            The index is fully populated from all stored documents it applies to.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.State.NeedsRepair">
            <summary>
            The index was being created, but something went wrong.
            There is no active long-running operation for the index,
            and the most recently finished long-running operation failed.
            The index is not updated when writing a document.
            Some index data may exist.
            Use the google.longrunning.Operations API to determine why the operation
            that last attempted to create this index failed, then re-create the
            index.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField">
            <summary>
            A field in an index.
            The field_path describes which field is indexed, the value_mode describes
            how the field value is indexed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.FieldPathFieldNumber">
            <summary>Field number for the "field_path" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.FieldPath">
            <summary>
            Can be __name__.
            For single field indexes, this must match the name of the field or may
            be omitted.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.OrderFieldNumber">
            <summary>Field number for the "order" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Order">
            <summary>
            Indicates that this field supports ordering by the specified order or
            comparing using =, !=, &lt;, &lt;=, >, >=.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.ArrayConfigFieldNumber">
            <summary>Field number for the "array_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.ArrayConfig">
            <summary>
            Indicates that this field supports operations on `array_value`s.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.ValueModeOneofCase">
            <summary>Enum of possible cases for the "value_mode" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types">
            <summary>Container for nested types declared in the IndexField message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.Order">
            <summary>
            The supported orderings.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.Order.Unspecified">
            <summary>
            The ordering is unspecified. Not a valid option.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.Order.Ascending">
            <summary>
            The field is ordered by ascending field value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.Order.Descending">
            <summary>
            The field is ordered by descending field value.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.ArrayConfig">
            <summary>
            The supported array value configurations.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.ArrayConfig.Unspecified">
            <summary>
            The index does not support additional array queries.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Index.Types.IndexField.Types.ArrayConfig.Contains">
            <summary>
            The index supports array containment queries.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Index.IndexName">
            <summary>
            <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>-typed view over the <see cref="P:Google.Cloud.Firestore.Admin.V1.Index.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.IndexName">
            <summary>Resource name for the <c>Index</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.IndexName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexName.ResourceNameType.ProjectDatabaseCollectionIndex">
            <summary>
            A resource name with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> containing the provided <paramref name="unparsedResourceName"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.FromProjectDatabaseCollectionIndex(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> with the pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="indexId">The <c>Index</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.Format(System.String,System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="indexId">The <c>Index</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.FormatProjectDatabaseCollectionIndex(System.String,System.String,System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="indexId">The <c>Index</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> with pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>
            </description>
            </item>
            </list>
            </remarks>
            <param name="indexName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>
            </description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="indexName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.IndexName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.TryParse(System.String,Google.Cloud.Firestore.Admin.V1.IndexName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>
            </description>
            </item>
            </list>
            </remarks>
            <param name="indexName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.TryParse(System.String,System.Boolean,Google.Cloud.Firestore.Admin.V1.IndexName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item>
            <description>
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>
            </description>
            </item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="indexName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.Firestore.Admin.V1.IndexName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName"/> class from the component parts of pattern
            <c>projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="databaseId">The <c>Database</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="collectionId">The <c>Collection</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="indexId">The <c>Index</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.Type">
            <summary>The <see cref="T:Google.Cloud.Firestore.Admin.V1.IndexName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.CollectionId">
            <summary>
            The <c>Collection</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.DatabaseId">
            <summary>
            The <c>Database</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.IndexId">
            <summary>
            The <c>Index</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexName.IsKnownPattern">
            <summary>Whether this instance contains a resource name with a known pattern.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.ToString">
            <summary>The string representation of the resource name.</summary>
            <returns>The string representation of the resource name.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.GetHashCode">
            <summary>Returns a hash code for this resource name.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.Equals(Google.Cloud.Firestore.Admin.V1.IndexName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.op_Equality(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Cloud.Firestore.Admin.V1.IndexName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.Firestore.Admin.V1.IndexName.op_Inequality(Google.Cloud.Firestore.Admin.V1.IndexName,Google.Cloud.Firestore.Admin.V1.IndexName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.LocationReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/location.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.LocationReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/location.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.LocationMetadata">
            <summary>
            The metadata message for [google.cloud.location.Location.metadata][google.cloud.location.Location.metadata].
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.OperationReflection">
            <summary>Holder for reflection information generated from google/firestore/admin/v1/operation.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor">
            <summary>File descriptor for google/firestore/admin/v1/operation.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.OperationState">
            <summary>
            Describes the state of the operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified">
            <summary>
            Unspecified.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Initializing">
            <summary>
            Request is being prepared for processing.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Processing">
            <summary>
            Request is actively being processed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Cancelling">
            <summary>
            Request is in the process of being cancelled after user called
            google.longrunning.Operations.CancelOperation on the operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Finalizing">
            <summary>
            Request has been processed and is in its finalization stage.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Successful">
            <summary>
            Request has completed successfully.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Failed">
            <summary>
            Request has finished being processed, but encountered an error.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.OperationState.Cancelled">
            <summary>
            Request has finished being cancelled after user called
            google.longrunning.Operations.CancelOperation.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata">
            <summary>
            Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
            [FirestoreAdmin.CreateIndex][google.firestore.admin.v1.FirestoreAdmin.CreateIndex].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.StartTimeFieldNumber">
            <summary>Field number for the "start_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.StartTime">
            <summary>
            The time this operation started.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.EndTimeFieldNumber">
            <summary>Field number for the "end_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.EndTime">
            <summary>
            The time this operation completed. Will be unset if operation still in
            progress.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.IndexFieldNumber">
            <summary>Field number for the "index" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.Index">
            <summary>
            The index resource that this operation is acting on. For example:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.State">
            <summary>
            The state of the operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.ProgressDocumentsFieldNumber">
            <summary>Field number for the "progress_documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.ProgressDocuments">
            <summary>
            The progress, in documents, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.ProgressBytesFieldNumber">
            <summary>Field number for the "progress_bytes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.ProgressBytes">
            <summary>
            The progress, in bytes, of this operation.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata">
            <summary>
            Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
            [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.StartTimeFieldNumber">
            <summary>Field number for the "start_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.StartTime">
            <summary>
            The time this operation started.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.EndTimeFieldNumber">
            <summary>Field number for the "end_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.EndTime">
            <summary>
            The time this operation completed. Will be unset if operation still in
            progress.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Field">
            <summary>
            The field resource that this operation is acting on. For example:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.IndexConfigDeltasFieldNumber">
            <summary>Field number for the "index_config_deltas" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.IndexConfigDeltas">
            <summary>
            A list of [IndexConfigDelta][google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta], which describe the intent of this
            operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.StateFieldNumber">
            <summary>Field number for the "state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.State">
            <summary>
            The state of the operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.ProgressDocumentsFieldNumber">
            <summary>Field number for the "progress_documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.ProgressDocuments">
            <summary>
            The progress, in documents, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.ProgressBytesFieldNumber">
            <summary>Field number for the "progress_bytes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.ProgressBytes">
            <summary>
            The progress, in bytes, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.TtlConfigDeltaFieldNumber">
            <summary>Field number for the "ttl_config_delta" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.TtlConfigDelta">
            <summary>
            Describes the deltas of TTL configuration.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types">
            <summary>Container for nested types declared in the FieldOperationMetadata message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta">
            <summary>
            Information about an index configuration change.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.ChangeTypeFieldNumber">
            <summary>Field number for the "change_type" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.ChangeType">
            <summary>
            Specifies how the index is changing.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.IndexFieldNumber">
            <summary>Field number for the "index" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Index">
            <summary>
            The index being changed.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types">
            <summary>Container for nested types declared in the IndexConfigDelta message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType">
            <summary>
            Specifies how the index is changing.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified">
            <summary>
            The type of change is not specified or known.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Add">
            <summary>
            The single field index is being added.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Remove">
            <summary>
            The single field index is being removed.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta">
            <summary>
            Information about an TTL configuration change.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.ChangeTypeFieldNumber">
            <summary>Field number for the "change_type" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.ChangeType">
            <summary>
            Specifies how the TTL configuration is changing.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.Types">
            <summary>Container for nested types declared in the TtlConfigDelta message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.Types.ChangeType">
            <summary>
            Specifies how the TTL config is changing.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.Types.ChangeType.Unspecified">
            <summary>
            The type of change is not specified or known.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.Types.ChangeType.Add">
            <summary>
            The TTL config is being added.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.TtlConfigDelta.Types.ChangeType.Remove">
            <summary>
            The TTL config is being removed.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata">
            <summary>
            Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
            [FirestoreAdmin.ExportDocuments][google.firestore.admin.v1.FirestoreAdmin.ExportDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.StartTimeFieldNumber">
            <summary>Field number for the "start_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.StartTime">
            <summary>
            The time this operation started.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.EndTimeFieldNumber">
            <summary>Field number for the "end_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.EndTime">
            <summary>
            The time this operation completed. Will be unset if operation still in
            progress.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.OperationStateFieldNumber">
            <summary>Field number for the "operation_state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.OperationState">
            <summary>
            The state of the export operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.ProgressDocumentsFieldNumber">
            <summary>Field number for the "progress_documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.ProgressDocuments">
            <summary>
            The progress, in documents, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.ProgressBytesFieldNumber">
            <summary>Field number for the "progress_bytes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.ProgressBytes">
            <summary>
            The progress, in bytes, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.CollectionIdsFieldNumber">
            <summary>Field number for the "collection_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.CollectionIds">
            <summary>
            Which collection ids are being exported.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.OutputUriPrefixFieldNumber">
            <summary>Field number for the "output_uri_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.OutputUriPrefix">
            <summary>
            Where the entities are being exported to.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata">
            <summary>
            Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
            [FirestoreAdmin.ImportDocuments][google.firestore.admin.v1.FirestoreAdmin.ImportDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.StartTimeFieldNumber">
            <summary>Field number for the "start_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.StartTime">
            <summary>
            The time this operation started.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.EndTimeFieldNumber">
            <summary>Field number for the "end_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.EndTime">
            <summary>
            The time this operation completed. Will be unset if operation still in
            progress.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.OperationStateFieldNumber">
            <summary>Field number for the "operation_state" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.OperationState">
            <summary>
            The state of the import operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.ProgressDocumentsFieldNumber">
            <summary>Field number for the "progress_documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.ProgressDocuments">
            <summary>
            The progress, in documents, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.ProgressBytesFieldNumber">
            <summary>Field number for the "progress_bytes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.ProgressBytes">
            <summary>
            The progress, in bytes, of this operation.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.CollectionIdsFieldNumber">
            <summary>Field number for the "collection_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.CollectionIds">
            <summary>
            Which collection ids are being imported.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.InputUriPrefixFieldNumber">
            <summary>Field number for the "input_uri_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.InputUriPrefix">
            <summary>
            The location of the documents being imported.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.ExportDocumentsResponse">
            <summary>
            Returned in the [google.longrunning.Operation][google.longrunning.Operation] response field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.ExportDocumentsResponse.OutputUriPrefixFieldNumber">
            <summary>Field number for the "output_uri_prefix" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.ExportDocumentsResponse.OutputUriPrefix">
            <summary>
            Location of the output files. This can be used to begin an import
            into Cloud Firestore (this project or another project) after the operation
            completes successfully.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.Progress">
            <summary>
            Describes the progress of the operation.
            Unit of work is generic and must be interpreted based on where [Progress][google.firestore.admin.v1.Progress]
            is used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Progress.EstimatedWorkFieldNumber">
            <summary>Field number for the "estimated_work" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Progress.EstimatedWork">
            <summary>
            The amount of work estimated.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.Admin.V1.Progress.CompletedWorkFieldNumber">
            <summary>Field number for the "completed_work" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.Progress.CompletedWork">
            <summary>
            The amount of work completed.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.Admin.V1.PackageApiMetadata">
            <summary>Static class to provide common access to package-wide API metadata.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.Admin.V1.PackageApiMetadata.ApiMetadata">
            <summary>The <see cref="T:Google.Api.Gax.Grpc.ApiMetadata"/> for services in this package.</summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>Static class to provide extension methods to configure API clients.</summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddFirestoreAdminClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Firestore.Admin.V1.FirestoreAdminClientBuilder})">
            <summary>
            Adds a singleton <see cref="T:Google.Cloud.Firestore.Admin.V1.FirestoreAdminClient"/> to <paramref name="services"/>.
            </summary>
            <param name="services">
            The service collection to add the client to. The services are used to configure the client when requested.
            </param>
            <param name="action">
            An optional action to invoke on the client builder. This is invoked before services from
            <paramref name="services"/> are used.
            </param>
        </member>
    </members>
</doc>
